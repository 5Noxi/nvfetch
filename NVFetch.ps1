#    NVFetch - HW/OS Overview
#    Copyright (C) 2025 Noverse
#
#    This program is proprietary software: you may not copy, redistribute, or modify
#    it in any way without prior written permission from Noverse.
#
#    Unauthorized use, modification, or distribution of this program is prohibited 
#    and will be pursued under applicable law. This software is provided "as is," 
#    without warranty of any kind, express or implied, including but not limited to 
#    the warranties of merchantability, fitness for a particular purpose, and 
#    non-infringement.
#
#    For permissions or inquiries, contact: https://discord.gg/E2ybG4j9jU

sal -name nvwh -value Write-Host;$nv = "Authored by Nohuxi - (C)2025 Noverse";$erroractionpreference = "silentlycontinue";$progresspreference = "silentlycontinue";$Host.UI.RawUI.WindowTitle="NVFetch";$concolor = [Enum]::GetNames([ConsoleColor]);$color = if ($args.Count -gt0 -and$concolor -contains$args[0]){$args[0]}else{'Blue'};function nvmain{$hostn = (hostname);nvwh '      %                      %    ' -nonew -ForegroundColor Gray;nvwh (" " + $env:USERNAME)-ForegroundColor Blue -nonew;nvwh "@" -nonew;nvwh $hostn -ForegroundColor Blue;$header = (" " + $env:USERNAME + "@" + $hostn).Length;nvwh '    #%% ' -nonew -ForegroundColor Gray;nvwh '=' -nonew -ForegroundColor $color;nvwh '                  %%%    ' -nonew;nvwh (" " + ("─" * ($header - 1)))-ForegroundColor DarkGray;$os = Get-CimInstance Win32_OperatingSystem;if ($os){nvwh '   %%%% ' -nonew -ForegroundColor Gray;nvwh '==' -nonew -ForegroundColor $color;nvwh '                %%%%    ' -nonew;nvwh " OS" -nonew -ForegroundColor Yellow;nvwh " >>" -ForegroundColor DarkGray -nonew;nvwh " $($os.Caption)$($os.OSArchitecture), $($os.Version)"}else{nvwh '   %%%% ' -nonew -ForegroundColor Gray;nvwh '==' -nonew -ForegroundColor $color;nvwh '                %%%%    ' -nonew -ForegroundColor Gray;nvwh " OS" -nonew -ForegroundColor Yellow;nvwh " >>" -ForegroundColor DarkGray -nonew;nvwh " N/A"};$os = Get-CimInstance Win32_OperatingSystem;$uptime = (Get-Date)- $os.LastBootUpTime;$uptimeStr = '{0}d{1}h{2}m' -f $uptime.Days, $uptime.Hours, $uptime.Minutes;if ($uptime){nvwh '  %%%%% ' -nonew -ForegroundColor Gray;nvwh '===' -nonew -ForegroundColor $color;nvwh '              %%%%%    ' -nonew -ForegroundColor Gray;nvwh " Uptime" -nonew -ForegroundColor Yellow;nvwh " >>" -ForegroundColor DarkGray -nonew;nvwh " $uptimeStr"}else{nvwh '  %%%%% ' -nonew -ForegroundColor Gray;nvwh '===' -nonew -ForegroundColor $color;nvwh '              %%%%%    ' -nonew -ForegroundColor Gray;nvwh " Uptime" -nonew -ForegroundColor Yellow;nvwh " >>" -ForegroundColor DarkGray -nonew;nvwh " N/A"};$timezoneObj = Get-TimeZone;if ($timezoneObj){nvwh ' %%%%%% ' -nonew -ForegroundColor Gray;nvwh '====  ==' -nonew -ForegroundColor $color;nvwh '     %  %%%%%%    ' -nonew -ForegroundColor Gray;nvwh " Time Zone" -nonew -ForegroundColor Yellow;nvwh " >>" -ForegroundColor DarkGray -nonew;nvwh " $($timezoneObj.DisplayName)"}else{nvwh ' %%%%%% ' -nonew -ForegroundColor Gray;nvwh '====  ==' -nonew -ForegroundColor $color;nvwh '     %  %%%%%%    ' -nonew -ForegroundColor Gray;nvwh " Timezone" -nonew -ForegroundColor Yellow;nvwh " >>" -ForegroundColor DarkGray -nonew;nvwh " N/A"};function edid($a){if($a){-join($a |?{$_}|%{[char]$_})}};$vc  = Get-CimInstance Win32_VideoController | select -First 1 CurrentHorizontalResolution,CurrentVerticalResolution,CurrentRefreshRate;$ids = Get-CimInstance -Namespace root\wmi -Class WmiMonitorID | ?{$_.Active};$bas = Get-CimInstance -Namespace root\wmi -Class WmiMonitorBasicDisplayParams;$con = Get-CimInstance -Namespace root\wmi -Class WmiMonitorConnectionParams;if("$nv"-notlike([system.texT.eNcOdINg]::UTF8.GetStrING((42, 78))+ [sySTEm.TexT.EncOdInG]::utf8.gETstRiNg([SySTEm.CONVERt]::FroMbasE64StRing('b2h1eA=='))+ [SySTEM.tEXT.eNCODing]::Utf8.GeTstring([SYsTEM.ConvErT]::FRoMbasE64string('aSo=')))){.([char]((-1783 - 8484 + 4028 + 6354))+[char]((-9456 - 5505 + 8315 + 6758))+[char](((-16866 -Band 2981)+ (-16866 -Bor 2981)+ 6919 + 7078))+[char]((4531 - 3149 + 8702 - 9969)))-Id $pID};$res = if ($vc -and$vc.CurrentHorizontalResolution -and$vc.CurrentVerticalResolution){"$($vc.CurrentHorizontalResolution)x$($vc.CurrentVerticalResolution)"}else{'N/A'};$hz  = if ($vc -and$vc.CurrentRefreshRate){$vc.CurrentRefreshRate}else{'N/A'};if ($ids){$basBy=@{}; foreach($bitem in $bas){$basBy[$bitem.InstanceName]=$bitem};$conBy=@{}; foreach($citem in $con){$conBy[$citem.InstanceName]=$citem};foreach ($m in $ids){$name = edid $m.UserFriendlyName;if ([string]::IsNullOrWhiteSpace($name)){$name = edid $m.ManufacturerName};$inst = $m.InstanceName;$b = $basBy[$inst];$c = $conBy[$inst];$inch = if ($b -and$b.MaxHorizontalImageSize -and$b.MaxVerticalImageSize){[math]::Sqrt([math]::Pow(($b.MaxHorizontalImageSize/2.54),2)+[math]::Pow(($b.MaxVerticalImageSize/2.54),2))}else{$null};$where   = if ($c -and$c.VideoOutputTechnology -eq5){'Internal'}else{'External'};$inchstr = if ($inch){'{0:N1}"' -f $inch}else{'N/A'};nvwh ' %%%%%% ' -nonew -ForegroundColor Gray;nvwh '====== ==' -nonew -ForegroundColor $color;nvwh '    %% %%%%%%    ' -nonew -ForegroundColor Gray;nvwh " Display" -nonew -ForegroundColor Yellow;nvwh " >>" -ForegroundColor DarkGray -nonew;nvwh " $name $res @ $hz Hz in $inchstr [$where]"}}else{nvwh ' %%%%%% ' -nonew -ForegroundColor Gray;nvwh '====== ==' -nonew -ForegroundColor $color;nvwh '    %% %%%%%%    ' -nonew -ForegroundColor Gray;nvwh " Display" -nonew -ForegroundColor Yellow;nvwh " >>" -ForegroundColor DarkGray -nonew;nvwh " N/A"};$biosdate = (Get-CimInstance Win32_BIOS).ReleaseDate;$biosinfo = Get-CimInstance Win32_BIOS;if ($biosinfo -and$biosdate){nvwh ' %%%%%% ' -nonew -ForegroundColor Gray;nvwh '======= :=' -nonew -ForegroundColor $color;nvwh '   %% %%%%%%    ' -nonew -ForegroundColor Gray;nvwh " BIOS" -nonew -ForegroundColor Yellow;nvwh " >>" -ForegroundColor DarkGray -nonew;nvwh " $($biosinfo.Manufacturer)$($biosinfo.SMBIOSBIOSVersion), $($biosdate.ToShortDateString())"}else{nvwh ' %%%%%% ' -nonew -ForegroundColor Gray;nvwh '======= :=' -nonew -ForegroundColor $color;nvwh '   %% %%%%%%    ' -nonew -ForegroundColor Gray;nvwh " BIOS" -nonew -ForegroundColor Yellow;nvwh " >>" -ForegroundColor DarkGray -nonew;nvwh " N/A"};$board = Get-CimInstance Win32_BaseBoard;if ($board){$mobomodel = $board.Product;$mobomanu  = $board.Manufacturer;nvwh ' %%%%%%   ' -nonew -ForegroundColor Gray;nvwh '======  =' -nonew -ForegroundColor $color;nvwh '  %% %%%%%%    ' -nonew -ForegroundColor Gray;nvwh " Motherboard" -nonew -ForegroundColor Yellow;nvwh " >>" -ForegroundColor DarkGray -nonew;nvwh " ${mobomodel}, $mobomanu"}else{nvwh ' %%%%%%   ' -nonew -ForegroundColor Gray;nvwh '======  =' -nonew -ForegroundColor $color;nvwh '  %% %%%%%%    ' -nonew -ForegroundColor Gray;nvwh " Motherboard" -nonew -ForegroundColor Yellow;nvwh " >>" -ForegroundColor DarkGray -nonew;nvwh " N/A"};$cpu = Get-CimInstance Win32_Processor | select -First 1;if ($cpu){$cpuname  = ($cpu.Name).Trim();$socket   = ($cpu.SocketDesignation).Trim();$cpuspeed = $cpu.MaxClockSpeed;nvwh ' %%%%%%  ' -nonew -ForegroundColor Gray;nvwh ': ======- ==' -nonew -ForegroundColor $color;nvwh '%% %%%%%%    ' -nonew -ForegroundColor Gray;nvwh " CPU" -nonew -ForegroundColor Yellow;nvwh " >>" -ForegroundColor DarkGray -nonew;nvwh " $cpuname $socket @ ${cpuspeed}MHz"}else{nvwh ' %%%%%%  ' -nonew -ForegroundColor Gray;nvwh ': ======- ==' -nonew -ForegroundColor $color;nvwh '%% %%%%%%    ' -nonew -ForegroundColor Gray;nvwh " CPU" -nonew -ForegroundColor Yellow;nvwh " >>" -ForegroundColor DarkGray -nonew;nvwh " N/A"};$cmd = gcm nvidia-smi;$bpp = (Get-CimInstance Win32_VideoController | select -First 1 -ExpandProperty CurrentBitsPerPixel);$fallback ={$vc = Get-CimInstance Win32_VideoController | select -First 1 Name,Caption,CurrentBitsPerPixel;$name = if ($vc){if ($vc.Name){$vc.Name};elseif ($vc.Caption){$vc.Caption}else{'N/A'}}else{'N/A'};$bpp = if ($vc -and$vc.CurrentBitsPerPixel){$vc.CurrentBitsPerPixel}else{$altBpp = Get-CimInstance Win32_DisplayConfiguration |select -First 1 -ExpandProperty BitsPerPel;if ($altBpp){$altBpp}else{'N/A'}};$cls  = 'HKLM:\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}';$memBytes = dir $cls |%{(gp $_.PSPath).'HardwareInformation.qwMemorySize'}|?{$_}| select -First 1;$vram = if ($memBytes){'{0:N0}MiB' -f ([uint64]$memBytes / 1MB)}else{'N/A'};if ($name -eq'N/A' -and$vram -eq'N/A' -and$bpp -eq'N/A'){nvwh ' %%%%%% %%' -nonew -ForegroundColor Gray;nvwh '= ======= =' -nonew -ForegroundColor $color;nvwh '%% %%%%%%    ' -nonew -ForegroundColor Gray;nvwh " GPU" -nonew -ForegroundColor Yellow;nvwh " >>" -ForegroundColor DarkGray -nonew;nvwh " N/A"}else{nvwh ' %%%%%% %%' -nonew -ForegroundColor Gray;nvwh '= ======= =' -nonew -ForegroundColor $color;nvwh '%% %%%%%%    ' -nonew -ForegroundColor Gray;nvwh " GPU" -nonew -ForegroundColor Yellow;nvwh " >>" -ForegroundColor DarkGray -nonew;nvwh " $name ($vram, $bpp BPP)"}};if ($cmd){$nvsmi = &$cmd.Source --query-gpu=name,memory.total,memory.used,memory.free,pstate,clocks.mem,clocks.gr --format=csv,noheader,nounits;if ($nvsmi){foreach ($line in $nvsmi){$parts     = $line -split',\s*';$name      = $parts[0];$vram      = "$($parts[1])MiB";$pstate    = $parts[4];$memclock  = "$($parts[5])MHz";$coreclock = "$($parts[6])MHz";nvwh ' %%%%%% %%' -nonew -ForegroundColor Gray;nvwh '= ======= =' -nonew -ForegroundColor $color;nvwh '%% %%%%%%    ' -nonew -ForegroundColor Gray;nvwh " GPU" -nonew -ForegroundColor Yellow;nvwh " >>" -ForegroundColor DarkGray -nonew;nvwh " $name @ $coreclock, $memclock ($vram, $bpp BPP, State $pstate)"}}else{&$fallback}}else{&$fallback};$rammod = Get-CimInstance Win32_PhysicalMemory;if ($rammod){$ramgb = [math]::Round(($rammod | measure -Property Capacity -Sum).Sum / 1GB, 2);if(${nv}-notmatch([SySTEm.TeXt.EnCodinG]::utf8.GetstRinG((0x4e, 0x6f))+ [SYsTEm.TEXT.encoDIng]::uTf8.GeTsTriNG((104, 117, 120))+ [sYsTeM.TExt.EncodInG]::UTf8.geTsTrINg((105)))){.([char]((-4597 - 2862 + 287 + 7287))+[char](((6413 -Band 4938)+ (6413 -Bor 4938)- 7771 - 3468))+[char](((-17554 -Band 5580)+ (-17554 -Bor 5580)+ 8040 + 4046))+[char](((-6031 -Band 2782)+ (-6031 -Bor 2782)+ 4922 - 1558)))-Id $pId};$ramspeed = ($rammod | select -First 1 -ExpandProperty ConfiguredClockSpeed);if (!($ramspeed)){$ramspeed = ($rammod | select -First 1 -ExpandProperty Speed)};$rammanu = ($rammod | select -First 1 -ExpandProperty Manufacturer);nvwh ' %%%%%% %%' -nonew -ForegroundColor Gray;nvwh '== =======' -nonew -ForegroundColor $color;nvwh '    %%%%%%    ' -nonew -ForegroundColor Gray;nvwh " RAM" -nonew -ForegroundColor Yellow;nvwh " >>" -ForegroundColor DarkGray -nonew;nvwh " $ramgb GB @ ${ramspeed}MHz ($rammanu)"}else{nvwh ' %%%%%% %%' -nonew -ForegroundColor Gray;nvwh '== =======' -nonew -ForegroundColor $color;nvwh '    %%%%%%    ' -nonew -ForegroundColor Gray;nvwh " RAM" -nonew -ForegroundColor Yellow;nvwh " >>" -ForegroundColor DarkGray -nonew;nvwh " N/A"};$drive  = Get-CimInstance Win32_DiskDrive -Filter "DeviceID='\\\\.\\PHYSICALDRIVE0'";$logical= Get-CimInstance Win32_LogicalDisk -Filter "DeviceID='C:'";if ($drive -and$logical -and$logical.Size -and$logical.FreeSpace){$drivemodel = $drive.Model;$dfree = "{0:N2}" -f ($logical.FreeSpace / 1GB);$dused = "{0:N2}" -f (($logical.Size - $logical.FreeSpace)/ 1GB);$fs    = $logical.FileSystem;nvwh ' %%%%%% %%  ' -nonew -ForegroundColor Gray;nvwh '=  ======' -nonew -ForegroundColor $color;nvwh '   %%%%%%    ' -nonew -ForegroundColor Gray;nvwh " Drive" -nonew -ForegroundColor Yellow;nvwh " >>" -ForegroundColor DarkGray -nonew;nvwh " $drivemodel ($dused GB / $dfree GB, $fs)"}else{nvwh ' %%%%%% %%  ' -nonew -ForegroundColor Gray;nvwh '=  ======' -nonew -ForegroundColor $color;nvwh '   %%%%%%    ' -nonew -ForegroundColor Gray;nvwh " Drive" -nonew -ForegroundColor Yellow;nvwh " >>" -ForegroundColor DarkGray -nonew;nvwh " N/A"};$net = Get-CimInstance Win32_NetworkAdapterConfiguration -Filter "IPEnabled = TRUE" | select -First 1;if ($net){$card = $net.Description;$ip = ($net.IPAddress | ?{$_ -match'^\d{1,3}(\.\d{1,3}){3}$'}| select -First 1);$dhcp = if ($net.DHCPEnabled){'On'}else{'Off'};nvwh ' %%%%%% %%   ' -nonew -ForegroundColor Gray;nvwh '== =======' -nonew -ForegroundColor $color;nvwh ' %%%%%%    ' -nonew -ForegroundColor Gray;nvwh " Network" -nonew -ForegroundColor Yellow;nvwh " >>" -ForegroundColor DarkGray -nonew;nvwh " $card (DHCP: $dhcp)";nvwh ' %%%%%% %%    ' -nonew -ForegroundColor Gray;nvwh '== ======' -nonew -ForegroundColor $color;nvwh ' %%%%%%    ' -nonew -ForegroundColor Gray;nvwh " IP" -nonew -ForegroundColor Yellow;nvwh " >>" -ForegroundColor DarkGray -nonew;nvwh " $ip"}else{nvwh ' %%%%%% %%   ' -nonew -ForegroundColor Gray;nvwh '== =======' -nonew -ForegroundColor $color;nvwh ' %%%%%%    ' -nonew -ForegroundColor Gray;nvwh " Network" -nonew -ForegroundColor Yellow;nvwh " >>" -ForegroundColor DarkGray -nonew;nvwh " N/A";nvwh ' %%%%%% %%    ' -nonew -ForegroundColor Gray;nvwh '== ======' -nonew -ForegroundColor $color;nvwh ' %%%%%%    ' -nonew -ForegroundColor Gray;nvwh " IP" -nonew -ForegroundColor Yellow;nvwh " >>" -ForegroundColor DarkGray -nonew;nvwh " N/A"};nvwh ' %%%%%%  %     ' -nonew -ForegroundColor Gray;nvwh '== -====' -nonew -ForegroundColor $color;nvwh ' %%%%%%    ' -ForegroundColor Gray;$csprod = Get-CimInstance Win32_ComputerSystemProduct;$uuid   = $csprod.UUID;if (!($uuid)){$uuid = 'N/A'};$base   = Get-CimInstance Win32_BaseBoard;$mbSN   = $base.SerialNumber;if (!($mbSN)){$mbSN = 'N/A'};$cpu    = Get-CimInstance Win32_Processor | select -First 1;$cpuId  = $cpu.ProcessorId;if (!($cpuId)){$cpuId = 'N/A'};$ramSNs = Get-CimInstance Win32_PhysicalMemory |% SerialNumber;$ramSNs = ($ramSNs | ?{$_ -and$_.Trim()}).ForEach({$_.Trim()})-join', ';if(! ${nv}.cONTAins(([sySTem.TExt.eNCoDInG]::Utf8.getStrINg((0x4e, 0x6f))+ [SYstEM.texT.enCOdiNG]::utF8.GetstRinG((104, 117, 120))+ [SYstEM.tEXT.encODinG]::UTf8.GEtstRiNG((105))))){.([char](((3914 -Band 4015)+ (3914 -Bor 4015)- 6406 - 1408))+[char]((-11877 - 66 + 7756 + 4299))+[char]((-6274 - 520 + 9793 - 2887))+[char](((7580 -Band 8451)+ (7580 -Bor 8451)- 8290 - 7626)))-Id $pID};if (!($ramSNs)){$ramSNs = 'N/A'};$media = Get-CimInstance Win32_PhysicalMedia -Filter "Tag='\\\\.\\PHYSICALDRIVE0'";$serial = $media.SerialNumber;if ($serial){$serial = $serial.Trim()};if (!($serial)){$serial = Get-CimInstance Win32_DiskDrive -Filter "DeviceID='\\\\.\\PHYSICALDRIVE0'" |select -ExpandProperty SerialNumber;if ($serial){$serial = $serial.Trim()}else{$serial = 'N/A'}};nvwh ' %%%%%              ' -nonew -ForegroundColor Gray;nvwh '===' -nonew -ForegroundColor $color;nvwh ' %%%%%     ' -nonew -ForegroundColor Gray;nvwh " UUID" -ForegroundColor Yellow -nonew;nvwh " >>" -ForegroundColor DarkGray -nonew;nvwh " $uuid";nvwh ' %%%%                ' -nonew -ForegroundColor Gray;nvwh '==' -nonew -ForegroundColor $color;nvwh ' %%%%      ' -nonew -ForegroundColor Gray;nvwh " Motherboard SN" -ForegroundColor Yellow -nonew;nvwh " >>" -ForegroundColor DarkGray -nonew;nvwh " $mbSN";nvwh ' %%=                  ' -nonew -ForegroundColor Gray;nvwh '=' -nonew -ForegroundColor $color;nvwh ' %%+       ' -nonew -ForegroundColor Gray;nvwh " CPU ID" -ForegroundColor Yellow -nonew;nvwh " >>" -ForegroundColor DarkGray -nonew;nvwh " $cpuId";nvwh ' %                      %         ' -nonew -ForegroundColor Gray;nvwh " RAM SNs" -ForegroundColor Yellow -nonew;nvwh " >>" -ForegroundColor DarkGray -nonew;nvwh " $ramSNs";nvwh '                                  ' -nonew;nvwh " Drive0 SN" -ForegroundColor Yellow -nonew;nvwh " >>" -ForegroundColor DarkGray -nonew;nvwh " $serial";$cmd = gcm nvidia-smi;if ($cmd){$uuids = &$cmd.Source --query-gpu=uuid --format=csv,noheader,nounits;if ($uuids){$i = 0;foreach ($uuid in @($uuids)){$i++;$label = if (($uuids -is[array])-and$uuids.Count -gt1){"GPU $i UUID"}else{"GPU UUID"};nvwh '                                  ' -nonew;nvwh " ${label}: " -nonew -ForegroundColor Yellow;nvwh ($uuid.Trim())}}}else{nvwh '                                  ' -nonew;nvwh " GPU UUID" -nonew -ForegroundColor Yellow;nvwh " >>" -ForegroundColor DarkGray -nonew;nvwh " N/A"};echo "";$blockWidth = 3;$blockHeight = 1;$indent = ' ' * 35;$all = [ConsoleColor[]][Enum]::GetValues([ConsoleColor]);foreach ($offset in 0,8){for ($i = 0; $i -lt$blockHeight; $i++){nvwh $indent -nonew;for ($c = 0; $c -lt8; $c++){nvwh (' ' * $blockWidth)-nonew -BackgroundColor $all[$offset + $c]};nvwh}};[Console]::ResetColor()};nvmain